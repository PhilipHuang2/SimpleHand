{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Documents\\\\simple-hand\\\\src\\\\Board.js\";\nimport React from 'react';\nimport SimpleCard from './SimpleCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class SimpleHandBoard extends React.Component {\n  renderSimpleCard(name, description) {\n    return /*#__PURE__*/_jsxDEV(SimpleCard, {\n      name: name,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n  onClick(id) {\n    this.props.moves.clickCard(id);\n    this.cardHand.pop(id);\n  }\n\n  render(G) {\n    const cardHand = [];\n\n    for (let i = 0; i < this.props.G.hand.length; i++) {\n      cardHand.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.onClick(i),\n        children: this.renderSimpleCard(this.props.G.hand[i], \"This button adds \" + this.props.G.hand[i] + \" to the total.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this));\n    }\n\n    let winner = '';\n\n    if (this.props.ctx.gameover) {\n      winner = this.props.ctx.gameover.winner !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"winner\",\n        children: [\"Winner: \", this.props.ctx.gameover.winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"winner\",\n        children: \"Draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginRight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.G.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        children: cardHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Public/Documents/simple-hand/src/Board.js"],"names":["React","SimpleCard","SimpleHandBoard","Component","renderSimpleCard","name","description","onClick","id","props","moves","clickCard","cardHand","pop","render","G","i","hand","length","push","winner","ctx","gameover","undefined","textAlign","marginRight","total","display","flexDirection","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,OAAO,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AACjDC,EAAAA,gBAAgB,CAACC,IAAD,EAAMC,WAAN,EAAmB;AAC/B,wBAAO,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAwB,MAAA,WAAW,EAAIC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACDC,EAAAA,OAAO,CAACC,EAAD,EAAK;AACR,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BH,EAA3B;AACA,SAAKI,QAAL,CAAcC,GAAd,CAAkBL,EAAlB;AACH;;AAEDM,EAAAA,MAAM,CAACC,CAAD,EACN;AACI,UAAMH,QAAQ,GAAG,EAAjB;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKP,KAAL,CAAWM,CAAX,CAAaE,IAAb,CAAkBC,MAArC,EAA6CF,CAAC,EAA9C,EACA;AACIJ,MAAAA,QAAQ,CAACO,IAAT,eACI;AAAK,QAAA,OAAO,EAAE,MAAM,KAAKZ,OAAL,CAAaS,CAAb,CAApB;AAAA,kBACK,KAAKZ,gBAAL,CAAsB,KAAKK,KAAL,CAAWM,CAAX,CAAaE,IAAb,CAAkBD,CAAlB,CAAtB,EAA4C,sBAAsB,KAAKP,KAAL,CAAWM,CAAX,CAAaE,IAAb,CAAkBD,CAAlB,CAAtB,GAA6C,gBAAzF;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,QAAII,MAAM,GAAG,EAAb;;AACA,QAAI,KAAKX,KAAL,CAAWY,GAAX,CAAeC,QAAnB,EAA6B;AACzBF,MAAAA,MAAM,GACV,KAAKX,KAAL,CAAWY,GAAX,CAAeC,QAAf,CAAwBF,MAAxB,KAAmCG,SAAnC,gBACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,+BAA0B,KAAKd,KAAL,CAAWY,GAAX,CAAeC,QAAf,CAAwBF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJE;AAMP;;AAGG,wBACI;AAAK,MAAA,KAAK,EAAI;AAACI,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,WAAW,EAAE;AAAnC,OAAd;AAAA,8BACI;AAAA,kBAAI,KAAKhB,KAAL,CAAWM,CAAX,CAAaW;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,KAAK,EAAI;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,aAAa,EAAE,KAAjC;AAAwCC,UAAAA,cAAc,EAAE;AAAxD,SAAd;AAAA,kBACKjB;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,EAMKQ,MANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA5CgD","sourcesContent":["import React from 'react';\r\nimport SimpleCard from './SimpleCard.js'\r\n\r\nexport class SimpleHandBoard extends React.Component {\r\n    renderSimpleCard(name,description) {\r\n        return <SimpleCard name={name} description = {description} />;\r\n    }\r\n    onClick(id) {\r\n        this.props.moves.clickCard(id);\r\n        this.cardHand.pop(id);\r\n    }\r\n\r\n    render(G)\r\n    {\r\n        const cardHand = [];\r\n        for(let i = 0; i < this.props.G.hand.length; i++)\r\n        {\r\n            cardHand.push(\r\n                <div onClick={() => this.onClick(i)} >\r\n                    {this.renderSimpleCard(this.props.G.hand[i], \"This button adds \" + this.props.G.hand[i] + \" to the total.\" )}\r\n                </div>\r\n                );\r\n        }\r\n\r\n        let winner = '';\r\n        if (this.props.ctx.gameover) {\r\n            winner =\r\n        this.props.ctx.gameover.winner !== undefined ? (\r\n          <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\r\n        ) : (\r\n          <div id=\"winner\">Draw!</div>\r\n        );\r\n    }\r\n\r\n\r\n        return (\r\n            <div style = {{textAlign: \"center\", marginRight: '300px'}}>\r\n                <p>{this.props.G.total}</p>\r\n                \r\n                <div style = {{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n                    {cardHand}\r\n                </div>\r\n                {winner}\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}